{"version":3,"file":"component---src-pages-archive-js-b733dd98575cfd4af49e.js","mappings":"0MAaA,MAAMA,EAAuBC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAAVJ,CAAU,i6CA2GzBK,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,UAAU,IA+IpD,UAjHoBC,IAAyB,IAAxB,SAAEC,EAAQ,KAAEC,GAAMF,EACrC,MACMG,EADcD,EAAKE,kBAAkBC,MACdC,QAAOC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OACP,IAApCC,EAAKC,YAAYC,cAAwB,IACrCC,GAAcC,EAAAA,EAAAA,QAAO,MACrBC,GAAcD,EAAAA,EAAAA,QAAO,MACrBE,GAAiBF,EAAAA,EAAAA,QAAO,IACxBG,GAAuBC,EAAAA,EAAAA,MAY7B,OAVAC,EAAAA,EAAAA,YAAU,KACJF,IAIJG,EAAAA,EAAGC,OAAOR,EAAYS,SAASC,EAAAA,EAAAA,aAC/BH,EAAAA,EAAGC,OAAON,EAAYO,SAASC,EAAAA,EAAAA,UAAS,IAAK,IAC7CP,EAAeM,QAAQE,SAAQ,CAACC,EAAKC,IAAMN,EAAAA,EAAGC,OAAOI,GAAKF,EAAAA,EAAAA,UAAa,GAAJG,MAAS,GAC3E,IAGDC,EAAAA,cAACC,EAAAA,GAAM,CAACzB,SAAUA,GAChBwB,EAAAA,cAACE,EAAAA,EAAM,CAACC,MAAM,YAEdH,EAAAA,cAAA,YACEA,EAAAA,cAAA,UAAQF,IAAKZ,GACXc,EAAAA,cAAA,MAAII,UAAU,eAAc,WAC5BJ,EAAAA,cAAA,KAAGI,UAAU,YAAY1B,EAAS2B,OAAO,mCAG3CL,EAAAA,cAACnC,EAAoB,CAACiC,IAAKV,GACzBY,EAAAA,cAAA,aACEA,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,MAAII,UAAU,kBAAiB,UAC/BJ,EAAAA,cAAA,MAAII,UAAU,kBAAiB,QAC/BJ,EAAAA,cAAA,UAAI,UAGRA,EAAAA,cAAA,aACGtB,EAAS2B,OAAS,GACjB3B,EAAS4B,KAAI,CAAAC,EAAWR,KAAO,IAAjB,KAAEhB,GAAMwB,EACpB,MAAM,KACJC,EAAI,OACJC,EAAM,SACNC,EAAQ,MACRP,EAAK,KACLQ,EAAI,QACJC,GACE7B,EAAKC,YACH6B,EAAO,IAAIC,KAAKN,GAAMO,cACtBC,EAAWjB,EAAI,EAAI,IAAIe,KAAKpC,EAASqB,EAAI,GAAGhB,KAAKC,YAAYwB,MAAMO,cAAgB,KACzF,OACEf,EAAAA,cAAAA,EAAAA,SAAA,KACGgB,GAAYA,IAAaH,GACxBb,EAAAA,cAAA,MAAIiB,IAAK,MAAMlB,KACbC,EAAAA,cAAA,MAAIkB,QAAQ,KACVlB,EAAAA,cAAA,OAAKI,UAAU,gBACbJ,EAAAA,cAAA,QAAMI,UAAU,YAAYS,MAKpCb,EAAAA,cAAA,MAAIiB,IAAKlB,EAAGD,IAAKqB,GAAO9B,EAAeM,QAAQI,GAAKoB,GAClDnB,EAAAA,cAAA,MAAII,UAAU,iBAAiB,GAAG,IAAIU,KAAKN,GAAMO,iBAEjDf,EAAAA,cAAA,MAAII,UAAU,SAASD,GAEvBH,EAAAA,cAAA,MAAII,UAAU,0BACXQ,EAAUZ,EAAAA,cAAA,YAAOY,GAAkBZ,EAAAA,cAAA,YAAM,MAG5CA,EAAAA,cAAA,MAAII,UAAU,wBACXO,aAAI,EAAJA,EAAMN,QAAS,GACdM,EAAKL,KAAI,CAACc,EAAMrB,IACdC,EAAAA,cAAA,QAAMiB,IAAKlB,IACRsB,EAAAA,EAAAA,IAAWD,GAAOA,EAAM,GACxBrB,IAAMY,EAAKN,OAAS,GAAKL,EAAAA,cAAA,QAAMI,UAAU,aAAY,SAK9DJ,EAAAA,cAAA,MAAII,UAAU,SACZJ,EAAAA,cAAA,WACGU,GACCV,EAAAA,cAAA,KAAGsB,KAAMZ,EAAU,aAAW,iBAC5BV,EAAAA,cAACuB,EAAAA,GAAI,CAACC,KAAK,cAGdf,GACCT,EAAAA,cAAA,KAAGsB,KAAMb,EAAQ,aAAW,eAC1BT,EAAAA,cAACuB,EAAAA,GAAI,CAACC,KAAK,eAMpB,QAOV,C","sources":["webpack://v2/./src/pages/archive.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { srConfig } from '@config';\nimport sr from '@utils/sr';\nimport { Layout } from '@components';\nimport { Icon } from '@components/icons';\nimport { usePrefersReducedMotion } from '@hooks';\nimport { getIconSvg } from '../utils';\nimport { get } from 'animejs';\n\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n\n  @media (max-width: 768px) {\n    margin: 50px -10px;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n\n    .hide-on-mobile {\n      @media (max-width: 768px) {\n        display: none;\n      }\n    }\n\n    tbody tr {\n      &:hover,\n      &:focus {\n        background-color: var(--light-navy);\n      }\n    }\n\n    th,\n    td {\n      padding: 10px;\n      text-align: left;\n\n      &:first-child {\n        padding-left: 20px;\n\n        @media (max-width: 768px) {\n          padding-left: 10px;\n        }\n      }\n      &:last-child {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n        }\n      }\n\n      svg {\n        width: 20px;\n        height: 20px;\n      }\n    }\n\n    tr {\n      cursor: default;\n\n      td:first-child {\n        border-top-left-radius: var(--border-radius);\n        border-bottom-left-radius: var(--border-radius);\n      }\n      td:last-child {\n        border-top-right-radius: var(--border-radius);\n        border-bottom-right-radius: var(--border-radius);\n      }\n    }\n\n    td {\n      &.year {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n          font-size: var(--fz-sm);\n        }\n      }\n\n      &.title {\n        padding-top: 15px;\n        padding-right: 20px;\n        color: var(--lightest-slate);\n        font-size: var(--fz-xl);\n        font-weight: 600;\n        line-height: 1.25;\n      }\n\n      &.company {\n        font-size: var(--fz-lg);\n        white-space: nowrap;\n      }\n\n      &.tech {\n        font-size: var(--fz-xxs);\n        font-family: var(--font-mono);\n        line-height: 1.5;\n        .separator {\n          margin: 5px 5px;\n        }\n        span {\n          display: inline-block;\n        }\n      }\n\n      &.links {\n        min-width: 100px;\n\n        div {\n          display: flex;\n          align-items: center;\n\n          a {\n            ${({ theme }) => theme.mixins.flexCenter};\n            flex-shrink: 0;\n          }\n\n          a + a {\n            margin-left: 10px;\n          }\n        }\n      }\n    }\n  .year-divider {\n    display: flex;\n    align-items: center;\n    text-align: center;\n    width: 100%;\n    position: relative;\n    margin: 10px 0;\n  }\n\n  .year-divider::before,\n  .year-divider::after {\n    content: \"\";\n    flex-grow: 1;\n    height: 1px;\n    background-color: var(--lightest-slate);\n    margin: 0 10px;\n  }\n  }\n`;\n\nconst ArchivePage = ({ location, data }) => {\n  const allProjects = data.allMarkdownRemark.edges;\n  const projects = allProjects.filter(({ node }) =>\n    node.frontmatter.showInProjects === false);\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealProjects = useRef([]);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealTable.current, srConfig(200, 0));\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <Helmet title=\"Archive\" />\n\n      <main>\n        <header ref={revealTitle}>\n          <h1 className=\"big-heading\">Archive</h1>\n          <p className=\"subtitle\">{projects.length} certificates and counting ...</p>\n        </header>\n\n        <StyledTableContainer ref={revealTable}>\n          <table>\n            <thead>\n              <tr>\n                <th>Year</th>\n                <th>Title</th>\n                <th className=\"hide-on-mobile\">Issuer</th>\n                <th className=\"hide-on-mobile\">Tags</th>\n                <th>Link</th>\n              </tr>\n            </thead>\n            <tbody>\n              {projects.length > 0 &&\n                projects.map(({ node }, i) => {\n                  const {\n                    date,\n                    github,\n                    external,\n                    title,\n                    tech,\n                    company,\n                  } = node.frontmatter;\n                  const year = new Date(date).getFullYear();\n                  const prevYear = i > 0 ? new Date(projects[i - 1].node.frontmatter.date).getFullYear() : null;\n                  return (\n                    <>\n                      {prevYear && prevYear !== year && (\n                        <tr key={`hr-${i}`}>\n                          <td colSpan=\"5\">\n                            <div className=\"year-divider\">\n                              <span className='overline'>{year}</span>\n                            </div>\n                          </td>\n                        </tr>\n                      )}\n                      <tr key={i} ref={el => (revealProjects.current[i] = el)}>\n                        <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\n\n                        <td className=\"title\">{title}</td>\n\n                        <td className=\"company hide-on-mobile\">\n                          {company ? <span>{company}</span> : <span>â€”</span>}\n                        </td>\n\n                        <td className=\"tech hide-on-mobile\">\n                          {tech?.length > 0 &&\n                            tech.map((item, i) => (\n                              <span key={i}>\n                                {getIconSvg(item)}{item}{''}\n                                {i !== tech.length - 1 && <span className=\"separator\">&middot;</span>}\n                              </span>\n                            ))}\n                        </td>\n\n                        <td className=\"links\">\n                          <div>\n                            {external && (\n                              <a href={external} aria-label=\"External Link\">\n                                <Icon name=\"External\" />\n                              </a>\n                            )}\n                            {github && (\n                              <a href={github} aria-label=\"GitHub Link\">\n                                <Icon name=\"GitHub\" />\n                              </a>\n                            )}\n                          </div>\n                        </td>\n                      </tr>\n                    </>\n                  );\n                })}\n            </tbody>\n          </table>\n        </StyledTableContainer>\n      </main>\n    </Layout>\n  );\n};\nArchivePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/projects/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n            tech\n            github\n            external\n            company\n            showInProjects\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["StyledTableContainer","styled","div","withConfig","displayName","componentId","_ref","theme","mixins","flexCenter","_ref2","location","data","projects","allMarkdownRemark","edges","filter","_ref3","node","frontmatter","showInProjects","revealTitle","useRef","revealTable","revealProjects","prefersReducedMotion","usePrefersReducedMotion","useEffect","sr","reveal","current","srConfig","forEach","ref","i","React","Layout","Helmet","title","className","length","map","_ref4","date","github","external","tech","company","year","Date","getFullYear","prevYear","key","colSpan","el","item","getIconSvg","href","Icon","name"],"sourceRoot":""}